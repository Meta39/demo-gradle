import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "org.springframework.boot"
    id "org.graalvm.buildtools.native"//使用 GraalVM Native Image 插件，会看到 build 下面多了 native* 相关的命令
}

dependencies {
    compileOnly "org.projectlombok:lombok"//仅编译时使用，不参与打包
    annotationProcessor "org.projectlombok:lombok"//注解
    testImplementation "org.projectlombok:lombok"
    implementation "org.springframework.boot:spring-boot-starter-web"//Web
    testImplementation "org.springframework.boot:spring-boot-starter-test"//只在测试时使用
    runtimeOnly "com.mysql:mysql-connector-j"//仅运行时使用，不参与编译，参与打包
    implementation "com.baomidou:mybatis-plus-spring-boot3-starter"//MyBatis-Plus
    implementation "org.apache.httpcomponents.client5:httpclient5"//apache http 连接池
    implementation "org.springframework.boot:spring-boot-starter-cache"//本地缓存
    implementation "com.github.ben-manes.caffeine:caffeine"//本地缓存使用 Caffeine（需要引入spring-boot-starter-cache）
}

def activeProfiles = project.properties['activeProfiles'] ?: "dev"
processResources {
    exclude {
        FileTreeElement details ->
            {
                !details.file.name.equals("application.yml") &&
                        !details.file.name.equals("application-" + activeProfiles + ".yml")
            }
    }
    filter ReplaceTokens, tokens: [
            activeProfiles: activeProfiles
    ]
}

bootRun {
    //默认：dev
    systemProperty 'spring.profiles.active', 'dev'
}

tasks.register('bootRunTest') {
    group "application"
    bootRun.configure {
        systemProperty 'spring.profiles.active', 'test'
    }
    finalizedBy(tasks.bootRun)
}

bootJar {//修改打成jar包以后的名字
//    archiveBaseName = "springBootDemo"//自定义的jar包名
    mainClass = "com.fu.springboot.SpringbootDemoApplication"//主启动类
//    version(null)//版本号
}

// GraalVM Native 配置
graalvmNative {
    // 禁用测试
    testSupport = false
}

//禁用测试编译Aot
compileAotTestJava {
    enabled = false
}