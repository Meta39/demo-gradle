apply plugin: 'org.springframework.boot'
apply plugin: 'org.graalvm.buildtools.native'//使用 GraalVM Native Image 插件，会看到 build 下面多了 native* 相关的命令
dependencies {
    compileOnly 'org.projectlombok:lombok'//仅编译时使用，不参与打包
    annotationProcessor 'org.projectlombok:lombok'//注解
    testImplementation 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-web'//Web
    testImplementation 'org.springframework.boot:spring-boot-starter-test'//只在测试时使用
    runtimeOnly 'com.mysql:mysql-connector-j'//仅运行时使用，不参与编译，参与打包
    implementation 'com.baomidou:mybatis-plus-boot-starter'//MyBatis-Plus
    implementation 'org.apache.httpcomponents.client5:httpclient5'//apache http 连接池
    implementation 'org.springframework.boot:spring-boot-starter-cache'//本地缓存
    implementation 'com.github.ben-manes.caffeine:caffeine'//本地缓存使用 Caffeine（需要引入spring-boot-starter-cache）
}

bootJar {//修改打成jar包以后的名字
    archiveBaseName = 'springBootDemo'//自定义的jar包名
    mainClass = 'com.fu.springboot.SpringbootDemoApplication'//主启动类
    version(null)//版本号
    //跳过 GraalVM Native 镜像插件的命令
    collectReachabilityMetadata{
        enabled = false
    }
}

//构建 docker 镜像
bootBuildImage {

    builder = "paketobuildpacks/builder-jammy-base:latest"

    // docker 镜像名称【当前项目名称 + 父项目版本号】
    imageName = "${project.name}:${rootProject.version}"

    //JVM版本
    environment["BP_JVM_VERSION"] = "21"

    // docker http 代理地址【百度】
    environment["HTTP_PROXY"] = "http://mirror.baidubce.com"

    // docker https 代理地址【百度】
    environment["HTTPS_PROXY"] = "https://mirror.baidubce.com"

    //是否推送镜像到 docker 仓库
    publish = false

    //构建镜像之前清除缓存
    cleanCache = true

    docker {
        // docker 地址
        host = "tcp://127.0.0.1:2376"

        // 是否启用 TLS 双向认证
        tlsVerify = false

        /*publishRegistry {
            // docker 仓库用户名
            username = "user"
            // docker 仓库密码
            password = "secret"
            // url 地址【如果有的话】
            url = "127.0.0.1/docker"
            // 邮箱地址【如果有的话】
            email = "12345@qq.com"
            // token 令牌【如果有的话】
            token = "token 令牌"
        }*/
    }

}

// GraalVM Native 配置
graalvmNative {
    // 禁用测试
    testSupport = false
}