# 设置 Gradle JAVA_HOME 路径。如果未指定设置，则默认值来自您的环境（JAVA_HOME或路径）
org.gradle.java.home=C:/Users/X/.jdks/graalvm-jdk-21.0.3

# JVM 参数
org.gradle.jvmargs=-Xms1024m -Xmx2048m -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8

# 默认并行执行项目任务，提升执行效率。默认情况下，Gradle 一次只运行一个任务。
# IDEA Gradle 设置中 勾选 Enable parallel Gradle model fetching for Gradle 7.4+ 也可以实现此效果。
org.gradle.parallel=true

# Gradle Daemon 是一个后台进程，它允许 Gradle 任务更快地执行，因为它会复用之前实例的 JVM 进程，而不是每次执行 Gradle 任务时都启动一个新的 JVM。
# 从 Gradle 3.0 开始，Gradle Daemon 默认是启用的
org.gradle.daemon=true

# 禁用性能监控，当性能慢的时候，可以短暂开启，查看性能为什么慢。
org.gradle.daemon.performance.enable-monitoring=false

# 按需配置项目。当需要任务执行时，才配置相关的项目和任务，以减少不必要的配置时间，提高构建速度。
org.gradle.configureondemand=true

# 构建缓存。Gradle 将在可能的情况下重用任何以前构建的任务输出，从而实现更快的构建。
org.gradle.caching=true

# Gradle 6.0 及更高版本中引入的一个系统属性，用于启用配置缓存，进一步提高 Gradle 的构建性能
# 如果要清除配置缓存，删除.gradle/configuration-cache文件夹即可。
org.gradle.configuration-cache=true

# 默认情况下，如果遇到任何配置缓存问题，Gradle 将导致构建失败。
# 在逐步改进插件或构建逻辑以支持配置缓存时，暂时将问题转为警告很有用，但不能保证构建会成功。
org.gradle.configuration-cache.problems=warn

# 允许最大问题数量。
org.gradle.configuration-cache.max-problems=5